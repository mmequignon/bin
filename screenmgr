#!/bin/bash

if [ -e /usr/bin/xrandr ] 
then
    xr="/usr/bin/xrandr"
else
    echo "/usr/bin/xrandr does not exist"
    exit 0
fi

arguments=( "$@" )
if [ ${#arguments[@]} -lt "1" ]
then
    echo "Missing options. Check out for the right syntax." 
    echo "screenmgr [action] [device] [position]"                                                            
    echo "screenmgr -l to list available devices"                                                            
    echo -e "\e[1;37mactions \e[0m"                                                                          
    echo "-c To activate secundary output"                                                                   
    echo "-d To disactivate secundary output"                                                                
    echo -e "\e[1;37mdevices \e[0m"                                                                          
    echo "Please use, here, one of the available devices printed with the "-l" option."                      
    echo -e "\e[1;37mpotition \e[0m"                                                                         
    echo "--left In order to place the new screen on the left of the primary one."                           
    echo "--right In order to place the new screen on the right of the primary one."                         
    echo "--clone In order to have the same picture on both screens"                                         
    exit 0  
fi

string=$( $xr | awk '/ connected/{printf("%s ", $1 )}' )
IFS=', ' read -r -a devices <<< "$string"

case ${arguments[0]} in
    -c)
        action="auto"
        ;;
    -d)
        action="off"
        ;;
    -l)
        if [ ${#devices[@]} -le "1" ]
        then
            echo "There's no available screen. Please connect one more device."
        else
            echo List of available devices :
            for (( i=1 ; i<="${#devices[@]}" ; i++ ))
            do
                echo "${devices[$i]}"
            done
        fi
        exit 0
        ;;
    -h)
        echo "screenmgr [action] [device] [position]"
        echo "screenmgr -l to list available devices"
        echo -e "\e[1;37mactions \e[0m"
        echo "-c To activate secundary output"
        echo "-d To disactivate secundary output"
        echo -e "\e[1;37mdevices \e[0m"
        echo "Please use, here, one of the available devices printed with the "-l" option."
        echo -e "\e[1;37mpotition \e[0m"
        echo "--left In order to place the new screen on the left of the primary one."
        echo "--right In order to place the new screen on the right of the primary one."
        echo "--clone In order to have the same picture on both screens"
        exit 0
        ;;

    *)
        echo Invalid action. 
        echo "First argument would be -c / -d / -l"
        echo "Please use the -h option to get more information."
        exit 0
        ;;
esac

for dev in "${!devices[@]}"
do
    if [ "$dev"=="${arguments[1]}" ] || [ "$action"=="off" ]
    then
        screen="${devices[0]}"
        device="${arguments[1]}"
    else
        echo "${arguments[1]}"
        echo "No device or non-available device selected, please, choose one :"
        for (( i=1 ; i<="${#devices[@]}" ; i++ ))
        do
            echo "${devices[$i]}"
        done
        exit 0
    fi
done

if [ "$action" != "off" ] 
then
    case ${arguments[2]} in 
        --right)
            position="right-of"
            ;;
        --clone)
            position="same-as"
            ;;
        *)
            echo "Unrecognized option. Check out for the right syntax."
            exit 0
            ;;
    esac
fi


resolution=$( $xr | awk '/ connected/{printf($3)}' | awk 'BEGIN { FS="+" } /1/ { print $1 }' )
if [ $action == "off" ]
then
    $xr --output $device --$action
    exit 0
elif [ -z $position ] || [ "$position" == "same-as" ]
then
    $xr --addmode $device $resolution
    $xr --output $device --mode $resolution --same-as $screen    
else
    $xr --output $device --$action --$position $screen
    exit 0
fi
